#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e 

# if any command in a pipe fails, kill the script (useful for indent)
set -o pipefail

arrow() {
  while read line; do
    echo "-----> ${line}"
  done
}

indent() {
  while read line; do
    echo "       ${line}"
  done
}

MONO_VERSION="3.4.0"
XSP_VERSION="3.0.11"
MONO_RT_DOWNLOAD_URL="http://heroku-buildpacks.qiniudn.com/mono-rt-${MONO_VERSION}.tar.bz2"
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
BP_DIR=$(cd $(dirname $0); cd ..; pwd)

echo "[INFO] BUILD_DIR: ${BUILD_DIR}"
echo "[INFO] CACHE_DIR: ${CACHE_DIR}"
echo "[INFO] ENV_DIR: ${ENV_DIR}"
echo "[INFO] BP_DIR: ${BP_DIR}"
echo "[INFO] PWD: ${PWD}"

# cache may not exist yet
mkdir -p ${CACHE_DIR}
MONO_RT_DIR=${CACHE_DIR}/mono

if [ ! -d ${MONO_RT_DIR} ]; then
  rm -rf ${MONO_RT_DIR}
  echo "-----> Downloading ${MONO_RT_DOWNLOAD_URL}"
  curl ${MONO_RT_DOWNLOAD_URL} --silent | tar xj -C ${CACHE_DIR}
fi

#ln -sf "${MONO_RT_DIR}" .

echo "[INFO] MONO_RT_DIR: ${MONO_RT_DIR}"

# find a solution file
SLN=$(find $BUILD_DIR -maxdepth 1 -iname "*.sln")
if [ $( echo "${SLN}" | wc -l ) -gt 1 ]; then
  echo "-----> Too many *.sln files"
  exit 1
fi

if [ "${SLN}" == "" ]; then
  echo "-----> No *.sln file found"
  exit 1
fi

echo "-----> Compiling Mono application"

ln -s "${MONO_RT_DIR}" /app
export PATH="/app/mono/bin:${PATH}"
export LD_LIBRARY_PATH="/app/mono/lib:${LD_LIBRARY_PATH}"

BUILD_CACHE_DIR=${CACHE_DIR}/build/
mkdir -p ${BUILD_CACHE_DIR}
xbuild /property:Configuration=Release /property:OutDir=${BUILD_CACHE_DIR} ${SLN} | indent
cp -r ${BUILD_CACHE_DIR}* ${BUILD_DIR}

echo "-----> Build SUCCESS"
